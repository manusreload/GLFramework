<?php
/**
 * Created by PhpStorm.
 * User: manus
 * Date: 06/04/17
 * Time: 12:28
 */

namespace GLFramework;

use GLFramework\Module\Module;
//use Symfony\Component\Yaml\Yaml;

/**
 * Class ConfigurationManager
 *
 * @package GLFramework
 */
class ConfigurationManager
{
    var $filename;

    /**
     * ConfigurationManager constructor.
     *
     * @param string $filename
     * @param string $folder
     */
    public function __construct($filename = 'config.yml', $folder = '.')
    {
        if ($folder !== null) {
            if ($folder === '.') {
                $folder = Bootstrap::getSingleton()->getDirectory();
            }
            $this->filename = realpath($folder) . '/' . $filename;;
        } else {
            $this->filename = $filename;
        }
    }

    /**
     * TODO
     *
     * @return string
     */
    public static function getAutogeneratedFile()
    {
        $config = Bootstrap::getSingleton()->getConfig();

        $file = 'autogenerated.config.yml';
        if (isset($config['installer']['autogenerated_path'])) {
            $file = $config['installer']['autogenerated_path'];
        }
        return $file;
    }

    /**
     * TODO
     *
     * @return mixed
     */
    public function load()
    {
        return Yaml::parse($this->filename);
    }

    /**
     * TODO
     *
     * @param $config
     * @return bool
     */
    public function save($config)
    {
        if (!file_put_contents($this->filename, Yaml::dump($config))) {
            return false;
        }
        return true;
    }

    /**
     * TODO
     *
     * @return string
     */
    public function getFilename()
    {
        return $this->filename;
    }

    /**
     * TODO
     *
     * @param $config
     */
    public function clearModules(&$config)
    {
        $config['modules'] = array();
    }

    /**
     * TODO
     *
     * @param $config
     * @param $module Module
     */
    public function enableModule(&$config, $module)
    {
        $config['modules'][$module->getFolderContainer()][$module->getListName()] = array();
    }

    /**
     * TODO
     *
     * @param $config
     * @param $module Module
     */
    public function disableModule(&$config, $module)
    {
        unset($config['modules'][$module->getFolderContainer()][$module->getListName()]);
    }

    /**
     * TODO
     *
     * @param $config
     * @param $module
     * @param $settings
     */
    public function setModuleSettings(&$config, $module, $settings)
    {
        $config['modules'][$module->getFolderContainer()][$module->getListName()] = $settings;
    }
}
