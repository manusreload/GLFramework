<?php
/**
 *     GLFramework, small web application framework.
 *     Copyright (C) 2016.  Manuel MuÃ±oz Rosa
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Created by PhpStorm.
 * User: manus
 * Date: 1/03/16
 * Time: 10:33
 */

namespace GLFramework\DaMa\Manipulators;

use GLFramework\Filesystem;
use TijsVerkoyen\CssToInlineStyles\Exception;

/**
 * Class XLSXManipulator
 *
 * @package GLFramework\DaMa\Manipulators
 */
class XLSXManipulator extends ManipulatorCore
{

    /**
     * @var \SpreadsheetReader
     */
    var $reader;

    /**
     * TODO
     *
     * @param $file
     * @param array $config
     */
    public function open($file, $config = array())
    {
        $fs = new Filesystem();
        $config['TempDir'] = $fs->getAbsolutePath();
        $this->reader = new \SpreadsheetReader_XLSX($file, $config);
    }

    /**
     * TODO
     *
     * @return array|bool
     */
    public function next()
    {
        // TODO: Implement next() method.
        if ($this->reader->valid()) {
            return array_map(array($this, 'map'), $this->reader->next());
        }
        return false;
    }

    /**
     * TODO
     *
     * @param $index
     */
    public function setSheet($index)
    {
        $this->reader->ChangeSheet($index);
        parent::setSheet($index); // TODO: Change the autogenerated stub
    }

    /**
     * TODO
     *
     * @param $item
     * @return mixed
     */
    public function map($item)
    {
        return trim($item);
    }
}
