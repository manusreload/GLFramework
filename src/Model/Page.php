<?php
/**
 *     GLFramework, small web application framework.
 *     Copyright (C) 2016.  Manuel MuÃ±oz Rosa
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Created by PhpStorm.
 * User: manus
 * Date: 18/2/16
 * Time: 17:31
 */

namespace GLFramework\Model;

use GLFramework\Controller;
use GLFramework\Model;
use GLFramework\ModelResult;

/**
 * Class Page
 *
 * @package GLFramework\Model
 */
class Page extends Model
{
    var $id;
    var $controller;
    var $admin;
    var $title;
    var $description;
    private static $cache = null;
    protected $table_name = 'page';
    protected $definition = array(
        'index' => 'id',
        'fields' => array(
            'controller' => 'varchar(255)',
            'title' => 'varchar(64)',
            'description' => 'varchar(255)',
            'admin' => 'int(11)',
        )
    );

    /**
     * Alias de getByController
     * TODO: Eliminar
     */
    public function get_by_controller($controller)
    {
        return $this->getByController($controller);
    }

    public function getByController($controller)
    {
        if (!is_string($controller)) {
            $name = get_class($controller);
        } else {
            $name = $controller;
        }
        if (self::$cache === null) {
            self::$cache = array();
            $items = $this->get_all()->models;
            foreach ($items as $item) {
                self::$cache[$item['controller']] = $item;
            }
        }
        return new ModelResult(Page::class, array(self::$cache[$name]));
    }

    /**
     * TODO
     *
     * @param $controller
     */
    public function generate($controller)
    {
        if (!$controller instanceof Controller) {
            $controller = new $controller('', null);
        }
        $this->controller = get_class($controller);
        $this->admin = $controller->admin;
        $this->title = $controller->name;
        $this->description = $controller->description;
    }

    public function insert($data = null)
    {
        self::$cache = null;
        return parent::insert($data); // TODO: Change the autogenerated stub
    }

    public function update($data = null)
    {
        self::$cache = null;
        return parent::update($data); // TODO: Change the autogenerated stub
    }

    public function delete()
    {
        self::$cache = null;
        return parent::delete(); // TODO: Change the autogenerated stub
    }


}
