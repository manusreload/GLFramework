<?php
/**
 * Created by PhpStorm.
 * User: manus
 * Date: 14/03/16
 * Time: 13:08
 */

namespace GLFramework;


use Psr\Log\AbstractLogger;

class Log extends AbstractLogger
{

    private static $instance;

    /**
     * Log constructor.
     */
    public function __construct()
    {
        self::$instance = $this;
    }

    /**
     * @return Log
     */
    public static function getInstance()
    {
        if(self::$instance == null) self::$instance = new Log();
        return self::$instance;
    }



    /**
     * Logs with an arbitrary level.
     *
     * @param mixed $level
     * @param string $message
     * @param array $context
     * @return null
     */
    public function log($level, $message, array $context = array())
    {
        // TODO: Implement log() method.
        if(!in_array('events', $context))
            Events::fire('onLog', array($message, $level));
    }

    public function emergency($message, array $context = array())
    {
        parent::emergency($message, $context); // TODO: Change the autogenerated stub
    }

    public function alert($message, array $context = array())
    {
        parent::alert($message, $context); // TODO: Change the autogenerated stub
    }

    public function critical($message, array $context = array())
    {
        parent::critical($message, $context); // TODO: Change the autogenerated stub
    }

    public function error($message, array $context = array())
    {
        parent::error($message, $context); // TODO: Change the autogenerated stub
    }

    public function warning($message, array $context = array())
    {
        parent::warning($message, $context); // TODO: Change the autogenerated stub
    }

    public function notice($message, array $context = array())
    {
        parent::notice($message, $context); // TODO: Change the autogenerated stub
    }

    public function info($message, array $context = array())
    {
        parent::info($message, $context); // TODO: Change the autogenerated stub
    }

    public function debug($message, array $context = array())
    {
        parent::debug($message, $context); // TODO: Change the autogenerated stub
    }


    public static function __callStatic($name, $arguments)
    {
        // TODO: Implement __callStatic() method.
        print_debug(self::getInstance());
        return call_user_func_array(array(getInstance(), $name), $arguments);
    }


}