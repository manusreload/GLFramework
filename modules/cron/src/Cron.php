<?php
/**
 * Created by PhpStorm.
 * User: manus
 * Date: 25/04/16
 * Time: 9:42
 */

namespace GLFramework\Modules\Cron;


use Cron\CronExpression;
use GLFramework\Bootstrap;
use GLFramework\Controller;
use GLFramework\Event\Event;
use GLFramework\Events;
use GLFramework\Filesystem;
use GLFramework\Middleware;
use GLFramework\Model\Vars;
use GLFramework\Module\ModuleSource;
use GLFramework\Request;
use GLFramework\Response;
use GLFramework\View;

class Cron extends ModuleSource
{
    public function __construct()
    {
        parent::__construct('cron');
    }

    var $cronTitle = "Ejemplo cron";
    /**
     *
     */
    public function generarScript()
    {
        $dir = Bootstrap::getSingleton()->getDirectory();
        $config = Bootstrap::getSingleton()->getConfigFile();
        $currentDir = Bootstrap::getSingleton()->getCurrentPath();
        $file = $this->getScriptPath();
        $bin_ = $this->getPhpExecutable();
        file_put_contents($file, "#!$bin_
<?php
// DO NO EDIT! This file was autogenerated by GLFramework at: " . date("Y-m-d H:i:s") . "
chdir(\"$currentDir\");
require_once \"vendor/autoload.php\";
\$bs = new GLFramework\\Bootstrap(\"$dir\", \"$config\");
\$bs->init();
\\GLFramework\\Modules\\Cron\\Cron::run();

");
        chmod($file, 0755);
    }

    public function getScriptPath()
    {
        $hash = Bootstrap::getAppHash();
        $fs = new Filesystem("cron_" . $hash . ".php");
        return $fs->getAbsolutePath();
    }

    public function getAdminControllers()
    {
        return array(\GLFramework\Modules\Controller\Cron\cron::class);
    }

    public function getTasks()
    {
        $builder = new CronTaskBuilder();
        Events::dispatch('getCronTasks', $builder);
        return $builder->getTasks();
    }

    private function getPhpExecutable()
    {
        return PHP_BINARY;
    }

    /**
     * @param $builder CronTaskBuilder
     */
    public function getCronTasks($builder)
    {
        $builder->addTask($this->getInstance(), 'Example Task', 'GLFramework\Modules\Cron->example');
    }

    public function example()
    {
        echo "This is an example!";
    }

    public static function run()
    {
        $hash = Bootstrap::getAppHash();
        Vars::setVar('cron_' . $hash, time());
        $tasks = new \Cron();
        $tasks = $tasks->get(array('enabled' => 1));
        foreach ($tasks->getModels() as $task) {
            $cron = CronExpression::factory($task->cron);
            if($cron->isDue()) {
                $task->last_run = now();
                $task->save();
                $task->run();
            }
        }
    }
}