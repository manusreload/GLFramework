<?php




namespace GLFramework\Modules\Controller\Cron;
use Cron\CronExpression;
use GLFramework\Bootstrap;
use GLFramework\Controller\AuthController;
use GLFramework\Model;

/**
 * Created by PhpStorm.
 * User: manus
 * Date: 25/04/16
 * Time: 10:53
 */
class cron extends AuthController
{
    var $admin = true;
    var $title = "Administrar Cron";
    var $cron;
    var $task;
    var $manager;
    var $system_user;
    var $time;

    public function __construct($base, $module)
    {
        parent::__construct($base, $module);
        $this->manager = new \GLFramework\Modules\Cron\Cron();
        $this->manager->generarScript();
        $this->system_user = get_current_user();
    }


    public function run()
    {
        if(!parent::run()) return false; // TODO: Change the autogenerated stub

        $hash = Bootstrap::getAppHash();
        $this->time = Model\Vars::getVar('cron_' . $hash);

        $this->cron = new \Cron();
        if(isset($this->params['id']))
        {
            $this->task = new \Cron($this->params['id']);
            $this->setTemplate("edit.twig");
            if(isset($_POST['save']))
            {
                $this->task->setData($_POST);
                $this->task->enabled = (isset($_POST['enabled']) && $_POST['enabled'])?1:0;
                $cron = CronExpression::factory($this->task->cron);
                $this->addMessage("La siguiente ejecucion serÃ¡ el: " . $cron->getNextRunDate()->format('Y-m-d H:i:s'));
                $this->task->save(true);
                if($this->params['id'] == 'add') {
                    $this->quit('/admin/cron/' . $this->task->id);
                }
            }
        }
        if(isset($_GET['remove']))
        {
            $this->task = new \Cron($_GET['remove']);
            $this->task->delete();
            $this->addMessage("Se ha eliminado correctamente!");
        }
        if(isset($_GET['test'])) {

            $task = new \Cron($_GET['test']);
            $task->run();
        }
        if(isset($_GET['try']))
        {
            $output = shell_exec('crontab -l');
            if(strpos($output, $this->manager->getScriptPath()) === FALSE)
            {
                file_put_contents('/tmp/crontab.txt', $output.'* * * * * ' . $this->manager->getScriptPath() . PHP_EOL);
                exec('crontab /tmp/crontab.txt', $message);
                $message = implode("\n", $message);
                $this->addMessage($message);
            }
            else
            {
                $this->addMessage("Se ha detectado una entrada con el mismo nombre!", "danger");
            }
        }
    }


}